---
version: "3.4"

services:
  traefik:
    image: "traefik:v2.3"
    networks:
      default:
        aliases:
          - ${OCIS_BASE_URL:-ocis.owncloud.local}
          - ${KEYCLOAK_BASE_URL:-keycloak.owncloud.local}
    command:
      - "--log.level=DEBUG"
      - "--certificatesResolvers.http.acme.email=${TRAEFIK_ACME_MAIL:-'example@example.org'}"
      - "--certificatesResolvers.http.acme.storage=/certs/acme.json"
      - "--certificatesResolvers.http.acme.httpChallenge.entryPoint=http"
      - "--api.dashboard=true"
      - "--entryPoints.http.address=:80"
      - "--entryPoints.https.address=:443"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
      - "--serverstransport.insecureskipverify=true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${BASE_DOMAIN:-owncloud.local}`)"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_BASIC_AUTH_USERS:-admin:$apr1$4vqie50r$YQAmQdtmz5n9rEALhxJ4l.}" # defaults to admin:admin
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.${BASE_DOMAIN:-owncloud.local}`)"
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=http"
      - "traefik.http.routers.traefik-secure.service=api@internal"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "certs:/certs"
    restart: always

  ocis:
    image: owncloud/ocis:${OCIS_DOCKER_TAG:-latest}
    networks:
      default:
    environment:
      # general config
      OCIS_DOMAIN: ${OCIS_BASE_URL:-ocis.owncloud.local}
      OCIS_LOG_LEVEL: debug
      # proxy config
      PROXY_LOG_LEVEL: trace
      PROXY_TLS: "true"
      PROXY_HTTP_ADDR: 0.0.0.0:9200
      PROXY_OIDC_ISSUER: https://${KEYCLOAK_BASE_URL:-keycloak.owncloud.local}/auth/realms/master/
      PROXY_OIDC_INSECURE: "true"
      # phoenix config
      PHOENIX_OIDC_CLIENT_ID: ocis-phoenix-abcd
      PHOENIX_OIDC_AUTHORITY: https://${KEYCLOAK_BASE_URL:-keycloak.owncloud.local}/auth/realms/master/
      PHOENIX_WEB_CONFIG_SERVER: https://${OCIS_BASE_URL:-ocis.owncloud.local}
      PHOENIX_OIDC_METADATA_URL: https://${KEYCLOAK_BASE_URL:-keycloak.owncloud.local}/auth/realms/master/.well-known/openid-configuration
      # storage config
      STORAGE_STORAGE_OWNCLOUD_REDIS_ADDR: redis:6379
      STORAGE_OIDC_ISSUER: https://${KEYCLOAK_BASE_URL:-keycloak.owncloud.local}/
      STORAGE_DATAGATEWAY_PUBLIC_URL: https://${OCIS_BASE_URL:-ocis.owncloud.local}/data
      STORAGE_FRONTEND_PUBLIC_URL: https://${OCIS_BASE_URL:-ocis.owncloud.local}/
      STORAGE_LDAP_IDP: https://${OCIS_BASE_URL:-ocis.owncloud.local}/
      # idp config
      KONNECTD_LOG_LEVEL: debug
      KONNECTD_ISS: https://${OCIS_BASE_URL:-ocis.owncloud.local}/
      KONNECTD_TLS: 1
      KONNECTD_ALLOW_DYNAMIC_CLIENT_REGISTRATION: "true"
      KONNECTD_SIGNING_KID: super
      KONNECTD_INSECURE: "true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ocis.entrypoints=http"
      - "traefik.http.routers.ocis.rule=Host(`${OCIS_BASE_URL:-ocis.owncloud.local}`)"
      - "traefik.http.middlewares.ocis-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.ocis.middlewares=ocis-https-redirect"
      - "traefik.http.routers.ocis-secure.entrypoints=https"
      - "traefik.http.routers.ocis-secure.rule=Host(`${OCIS_BASE_URL:-ocis.owncloud.local}`)"
      - "traefik.http.routers.ocis-secure.tls=true"
      - "traefik.http.routers.ocis-secure.tls.certresolver=http"
      - "traefik.http.routers.ocis-secure.service=ocis"
      - "traefik.http.services.ocis.loadbalancer.server.port=9200"
      - "traefik.http.services.ocis.loadbalancer.server.scheme=https"
    restart: always

  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
  
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      PROXY_ADDRESS_FORWARDING: "true"
    ports:
      - 8080:8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.entrypoints=http"
      - "traefik.http.routers.keycloak.rule=Host(`${KEYCLOAK_BASE_URL:-keycloak.owncloud.local}`)"
      - "traefik.http.middlewares.keycloak-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.keycloak.middlewares=keycloak-https-redirect"
      - "traefik.http.routers.keycloak-secure.entrypoints=https"
      - "traefik.http.routers.keycloak-secure.rule=Host(`${KEYCLOAK_BASE_URL:-keycloak.owncloud.local}`)"
      - "traefik.http.routers.keycloak-secure.tls=true"
      - "traefik.http.routers.keycloak-secure.tls.certresolver=http"
      - "traefik.http.routers.keycloak-secure.service=keycloak"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
      - "traefik.http.services.keycloak.loadbalancer.server.scheme=http"
    depends_on:
      - postgres

volumes:
  certs:
  postgres_data:
